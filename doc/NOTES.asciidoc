// Copyright (c) 2021--2023 TK Chia
//
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

= Developer notes

:fn-hall-21: footnote:hall-21[J. Hall et al.  DOS Extender.  FreeDOS Wiki, 2021.  Retrieved on 14 October 2023.  http://wiki.freedos.org/wiki/index.php?title=DOS_Extender&oldid=2362.]
:fn-hall-21b: footnote:hall-21b[https://www.freedos.org/.  Retrieved on 15 August 2021.]
:fn-kadziolka-23: footnote:kadziolka-23[https://github.com/meithecatte/miniforth.  Retrieved on 17 November 2023.]
:fn-uefi-21: footnote:uefi-21[UEFI Forum.  Unified Extensible Firmware Interface (UEFI) Specification: Version 2.9.  March 2021.  https://uefi.org/sites/default/files/resources/UEFI_Spec_2_9_2021_03_18.pdf.]

  * big fluffy goal: boot and run some existing 16-/32-bit code originally meant for "legacy BIOS" systems, on a UEFI{fn-uefi-21} PC
  * possible candidates are
  ** simple PC booter programs, such as Maja Kądziołka's miniforth{fn-kadziolka-23}
  ** programs that use a DOS extender{fn-hall-21}
  ** FreeDOS{fn-hall-21b} itself

---

=== Code structure (?)

:fn-coutant-98: footnote:coutant-98[C. Coutant et al. (?)  ELF-64 Object File Format: Version 1.5 Draft 2.  May 1998.  Retrieved on 14 October 2023.  https://uclibc.org/docs/elf-64-gen.pdf.]
:fn-intel-21: footnote:intel-21[Intel Corporation.  Intel® 64 and IA-32 Architectures Software Developer's Manual: Volume 3A, pp. 2-17, 4-14—4-19.  June 2021.]
:fn-krinkin-20: footnote:krinkin-20[M. Krinkin.  Loading an ELF image from EFI.  ./ Welcome to the Mike's homepage!, November 2020.  Retrieved on 14 October 2023.  https://krinkinmu.github.io/2020/11/15/loading-elf-image.html.]
:fn-tis-95: footnote:tis-95[TIS Committee.  Tool Interface Standard (TIS) Executable and Linking Format (ELF) Specification: Version 1.2.  May 1995.  http://refspecs.linuxbase.org/elf/elf.pdf.]

  * "Muon" subproject (TBA!)
  * "Macron" subproject (very much in progress!)
  ** stage 1 is for stuff that happens before exiting UEFI boot services; stage 2 is for stuff after that
  *** other than the above, there are (currently) no hard and fast rules for delineating the two
  *** for now (`efi.krinkinmu/`) I merely co-opt Mike Krinkin's simple UEFI → ELF loader{fn-krinkin-20} for use as stage 1; I modify the code to pass extra info to stage 2
  ** stage 2 (`macron2/`) takes the form of an ELF-64 executable{fn-coutant-98}{fn-tis-95} for x86-64

---

=== Relevant standards (and "standards")

:fn-brown-00: footnote:brown-00[Brown, Ralf.  The x86 Interrupt List.  16 July 2000.  http://www.cs.cmu.edu/~ralf/files.html.]
:fn-uefi-21b: footnote:uefi-20b[UEFI Forum.  Advanced Configuration and Power Interface (ACPI) Specification: Version 6.4.  January 2021.  https://uefi.org/sites/default/files/resources/ACPI_Spec_6_4_Jan22.pdf.]

  * we assume the PC firmware
  ** implements UEFI{fn-uefi-21}
  ** has some ACPI tables{fn-uefi-21b} which report what features the underlying system has
  * we need to implement some or all of the BIOS interrupts and parts of the BIOS data area described in RBIL{fn-brown-00}

---

=== Other notes

:fn-ibm-86: footnote:ibm-86[International Business Machines Corporation.  IBM: Personal Computer Hardware Reference Library: Technical Reference 6183355, pp. 5-14 et seq.  March 1986.  https://archive.org/details/bitsavers_ibmpcat618ferenceMar86_25829277/page/n245/mode/2up.]
:fn-lunt-18: footnote:lunt-18[B. D. Lunt.  USB: The Universal Serial Bus.  April 2018.]
:fn-lunt-22: footnote:lunt-22[https://github.com/fysnet/FYSOS.  Retrieved on 15 April 2022.]
:fn-oconnor-22: footnote:oconnor-22[https://www.seabios.org/.  Retrieved on 15 April 2022.]

  * how to correctly interface with PC hardware legacy-style
  ** IBM's published BIOS source code, e.g. PC AT BIOS listings from 1986,{fn-ibm-86} might be useful
  * USB stuff — possibly useful are
  ** Forever Young Software's FYSOS code,{fn-lunt-22} a companion to their OS design book series, including a book on USB programming{fn-lunt-18}
  ** the SeaBIOS project{fn-oconnor-22}
